//
//  Good definitions:
// 

// this passes
val double_good : x:int -> int[y | y = (x + x)] ;; 
let double_good = (fun x -> x + x) ;; 

// let double_good = (fun x -> 2 * x) ;; 

//
// Bad definitions:
//

// this does not
val double_bad : x:int -> int[y | y = (x + x)] ;;
let double_bad = (fun x -> x) ;;

// let double_bad = (fun x -> x + x + x) ;; 
