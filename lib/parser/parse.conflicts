
** Conflict (shift/reduce) in state 72.
** Tokens involved: TIMES PLUS OR MINUS LESS GREATER EQUAL COLON AND
** The following explanations concentrate on token TIMES.
** This state is reached from file after reading:

LET VAR EQUAL expr IN expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
topexpr EOF 
mark_location(topexpr_unmarked) 
topexpr_unmarked 
expr 
mark_location(expr_unmarked) 
expr_unmarked 
(?)

** In state 72, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

LET VAR EQUAL expr IN expr 
                      mark_location(expr_unmarked) 
                      expr_unmarked 
                      expr . TIMES expr 

** In state 72, looking ahead at TIMES, reducing production
** expr_unmarked -> LET VAR EQUAL expr IN expr
** is permitted because of the following sub-derivation:

expr TIMES expr // lookahead token appears
mark_location(expr_unmarked) // lookahead token is inherited
expr_unmarked // lookahead token is inherited
LET VAR EQUAL expr IN expr . 

** Conflict (shift/reduce) in state 69.
** Tokens involved: OR GREATER COLON AND
** The following explanations concentrate on token OR.
** This state is reached from file after reading:

IF expr THEN expr ELSE expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
topexpr EOF 
mark_location(topexpr_unmarked) 
topexpr_unmarked 
expr 
mark_location(expr_unmarked) 
expr_unmarked 
(?)

** In state 69, looking ahead at OR, shifting is permitted
** because of the following sub-derivation:

IF expr THEN expr ELSE expr 
                       mark_location(expr_unmarked) 
                       expr_unmarked 
                       expr . OR expr 

** In state 69, looking ahead at OR, reducing production
** expr_unmarked -> IF expr THEN expr ELSE expr
** is permitted because of the following sub-derivation:

expr OR expr // lookahead token appears
mark_location(expr_unmarked) // lookahead token is inherited
expr_unmarked // lookahead token is inherited
IF expr THEN expr ELSE expr . 

** Conflict (shift/reduce) in state 64.
** Tokens involved: OR GREATER COLON AND
** The following explanations concentrate on token OR.
** This state is reached from file after reading:

FUN expr ARROW expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
topexpr EOF 
mark_location(topexpr_unmarked) 
topexpr_unmarked 
expr 
mark_location(expr_unmarked) 
expr_unmarked 
(?)

** In state 64, looking ahead at OR, shifting is permitted
** because of the following sub-derivation:

FUN expr ARROW expr 
               mark_location(expr_unmarked) 
               expr_unmarked 
               expr . OR expr 

** In state 64, looking ahead at OR, reducing production
** expr_unmarked -> FUN expr ARROW expr
** is permitted because of the following sub-derivation:

expr OR expr // lookahead token appears
mark_location(expr_unmarked) // lookahead token is inherited
expr_unmarked // lookahead token is inherited
FUN expr ARROW expr . 

** Conflict (shift/reduce) in state 62.
** Tokens involved: OR GREATER COLON AND
** The following explanations concentrate on token OR.
** This state is reached from file after reading:

expr EQUAL expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
topexpr EOF 
mark_location(topexpr_unmarked) 
topexpr_unmarked 
expr 
mark_location(expr_unmarked) 
expr_unmarked 
(?)

** In state 62, looking ahead at OR, reducing production
** expr_unmarked -> expr EQUAL expr
** is permitted because of the following sub-derivation:

expr OR expr // lookahead token appears
mark_location(expr_unmarked) // lookahead token is inherited
expr_unmarked // lookahead token is inherited
expr EQUAL expr . 

** In state 62, looking ahead at OR, shifting is permitted
** because of the following sub-derivation:

expr EQUAL expr 
           mark_location(expr_unmarked) 
           expr_unmarked 
           expr . OR expr 

** Conflict (reduce/reduce) in state 57.
** Tokens involved: VAR TRUE TIMES PLUS OR MINUS LPAREN LET LESS INT IF GREATER FUN FALSE EQUAL COLON AND
** The following explanations concentrate on token VAR.
** This state is reached from file after reading:

app_expr simple_expr_unmarked

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
topexpr EOF 
mark_location(topexpr_unmarked) 
topexpr_unmarked 
expr 
mark_location(expr_unmarked) 
expr_unmarked 
app_expr_unmarked 
(?)

** In state 57, looking ahead at VAR, reducing production
** app_expr_unmarked -> simple_expr_unmarked
** is permitted because of the following sub-derivation:

app_expr simple_expr 
         mark_location(simple_expr_unmarked) 
         simple_expr_unmarked 
         expr COLON ty 
         mark_location(expr_unmarked) 
         expr_unmarked 
         app_expr_unmarked 
         app_expr simple_expr // lookahead token appears because simple_expr can begin with VAR
         mark_location(app_expr_unmarked) // lookahead token is inherited
         app_expr_unmarked // lookahead token is inherited
         simple_expr_unmarked . 

** In state 57, looking ahead at VAR, reducing production
** mark_location(simple_expr_unmarked) -> simple_expr_unmarked
** is permitted because of the following sub-derivation:

app_expr simple_expr // lookahead token appears because simple_expr can begin with VAR
mark_location(app_expr_unmarked) // lookahead token is inherited
app_expr_unmarked // lookahead token is inherited
app_expr simple_expr // lookahead token is inherited
         mark_location(simple_expr_unmarked) // lookahead token is inherited
         simple_expr_unmarked . 

** Conflict (reduce/reduce) in state 55.
** Tokens involved: MINUS LET
** The following explanations concentrate on token MINUS.
** This state is reached from file after reading:

app_expr_unmarked

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
topexpr EOF 
mark_location(topexpr_unmarked) 
topexpr_unmarked 
expr 
mark_location(expr_unmarked) 
expr_unmarked 
(?)

** In state 55, looking ahead at MINUS, reducing production
** expr_unmarked -> app_expr_unmarked
** is permitted because of the following sub-derivation:

expr MINUS expr // lookahead token appears
mark_location(expr_unmarked) // lookahead token is inherited
expr_unmarked // lookahead token is inherited
app_expr_unmarked . 

** In state 55, looking ahead at MINUS, reducing production
** mark_location(app_expr_unmarked) -> app_expr_unmarked
** is permitted because of the following sub-derivation:

app_expr_unmarked 
app_expr simple_expr // lookahead token appears because simple_expr can begin with MINUS
mark_location(app_expr_unmarked) // lookahead token is inherited
app_expr_unmarked . 

** Conflict (shift/reduce) in state 54.
** Tokens involved: OR GREATER COLON AND
** The following explanations concentrate on token OR.
** This state is reached from file after reading:

expr LESS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
topexpr EOF 
mark_location(topexpr_unmarked) 
topexpr_unmarked 
expr 
mark_location(expr_unmarked) 
expr_unmarked 
(?)

** In state 54, looking ahead at OR, reducing production
** expr_unmarked -> expr LESS expr
** is permitted because of the following sub-derivation:

expr OR expr // lookahead token appears
mark_location(expr_unmarked) // lookahead token is inherited
expr_unmarked // lookahead token is inherited
expr LESS expr . 

** In state 54, looking ahead at OR, shifting is permitted
** because of the following sub-derivation:

expr LESS expr 
          mark_location(expr_unmarked) 
          expr_unmarked 
          expr . OR expr 

** Conflict (shift/reduce) in state 52.
** Tokens involved: TIMES PLUS OR MINUS LESS GREATER EQUAL COLON AND
** The following explanations concentrate on token TIMES.
** This state is reached from file after reading:

expr AND expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
topexpr EOF 
mark_location(topexpr_unmarked) 
topexpr_unmarked 
expr 
mark_location(expr_unmarked) 
expr_unmarked 
(?)

** In state 52, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr AND expr 
         mark_location(expr_unmarked) 
         expr_unmarked 
         expr . TIMES expr 

** In state 52, looking ahead at TIMES, reducing production
** expr_unmarked -> expr AND expr
** is permitted because of the following sub-derivation:

expr TIMES expr // lookahead token appears
mark_location(expr_unmarked) // lookahead token is inherited
expr_unmarked // lookahead token is inherited
expr AND expr . 

** Conflict (shift/reduce) in state 50.
** Token involved: ARROW
** This state is reached from file after reading:

FUN expr COLON ty

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
topexpr EOF 
mark_location(topexpr_unmarked) 
topexpr_unmarked 
expr 
mark_location(expr_unmarked) 
expr_unmarked 
(?)

** In state 50, looking ahead at ARROW, reducing production
** simple_expr_unmarked -> expr COLON ty
** is permitted because of the following sub-derivation:

FUN expr ARROW expr // lookahead token appears
    mark_location(expr_unmarked) // lookahead token is inherited
    expr_unmarked // lookahead token is inherited
    app_expr_unmarked // lookahead token is inherited
    simple_expr_unmarked // lookahead token is inherited
    expr COLON ty . 

** In state 50, looking ahead at ARROW, shifting is permitted
** because of the following sub-derivation:

FUN expr ARROW expr 
    mark_location(expr_unmarked) 
    expr_unmarked 
    app_expr_unmarked 
    simple_expr_unmarked 
    expr COLON ty 
               mark_type_location(ty_unmarked) 
               ty_unmarked 
               ty . ARROW ty 

** Conflict (shift/reduce) in state 27.
** Tokens involved: OR GREATER COLON AND
** The following explanations concentrate on token OR.
** This state is reached from file after reading:

expr MINUS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
topexpr EOF 
mark_location(topexpr_unmarked) 
topexpr_unmarked 
expr 
mark_location(expr_unmarked) 
expr_unmarked 
(?)

** In state 27, looking ahead at OR, reducing production
** expr_unmarked -> expr MINUS expr
** is permitted because of the following sub-derivation:

expr OR expr // lookahead token appears
mark_location(expr_unmarked) // lookahead token is inherited
expr_unmarked // lookahead token is inherited
expr MINUS expr . 

** In state 27, looking ahead at OR, shifting is permitted
** because of the following sub-derivation:

expr MINUS expr 
           mark_location(expr_unmarked) 
           expr_unmarked 
           expr . OR expr 

** Conflict (shift/reduce) in state 25.
** Tokens involved: TIMES PLUS OR MINUS LESS GREATER EQUAL COLON AND
** The following explanations concentrate on token TIMES.
** This state is reached from file after reading:

expr GREATER expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
topexpr EOF 
mark_location(topexpr_unmarked) 
topexpr_unmarked 
expr 
mark_location(expr_unmarked) 
expr_unmarked 
(?)

** In state 25, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr GREATER expr 
             mark_location(expr_unmarked) 
             expr_unmarked 
             expr . TIMES expr 

** In state 25, looking ahead at TIMES, reducing production
** expr_unmarked -> expr GREATER expr
** is permitted because of the following sub-derivation:

expr TIMES expr // lookahead token appears
mark_location(expr_unmarked) // lookahead token is inherited
expr_unmarked // lookahead token is inherited
expr GREATER expr . 

** Conflict (shift/reduce) in state 23.
** Tokens involved: OR GREATER COLON AND
** The following explanations concentrate on token OR.
** This state is reached from file after reading:

expr PLUS expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
topexpr EOF 
mark_location(topexpr_unmarked) 
topexpr_unmarked 
expr 
mark_location(expr_unmarked) 
expr_unmarked 
(?)

** In state 23, looking ahead at OR, reducing production
** expr_unmarked -> expr PLUS expr
** is permitted because of the following sub-derivation:

expr OR expr // lookahead token appears
mark_location(expr_unmarked) // lookahead token is inherited
expr_unmarked // lookahead token is inherited
expr PLUS expr . 

** In state 23, looking ahead at OR, shifting is permitted
** because of the following sub-derivation:

expr PLUS expr 
          mark_location(expr_unmarked) 
          expr_unmarked 
          expr . OR expr 

** Conflict (shift/reduce) in state 21.
** Tokens involved: TIMES PLUS OR MINUS LESS GREATER EQUAL COLON AND
** The following explanations concentrate on token TIMES.
** This state is reached from file after reading:

expr OR expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
topexpr EOF 
mark_location(topexpr_unmarked) 
topexpr_unmarked 
expr 
mark_location(expr_unmarked) 
expr_unmarked 
(?)

** In state 21, looking ahead at TIMES, shifting is permitted
** because of the following sub-derivation:

expr OR expr 
        mark_location(expr_unmarked) 
        expr_unmarked 
        expr . TIMES expr 

** In state 21, looking ahead at TIMES, reducing production
** expr_unmarked -> expr OR expr
** is permitted because of the following sub-derivation:

expr TIMES expr // lookahead token appears
mark_location(expr_unmarked) // lookahead token is inherited
expr_unmarked // lookahead token is inherited
expr OR expr . 

** Conflict (shift/reduce) in state 19.
** Tokens involved: OR GREATER COLON AND
** The following explanations concentrate on token OR.
** This state is reached from file after reading:

expr TIMES expr

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

file 
topexpr EOF 
mark_location(topexpr_unmarked) 
topexpr_unmarked 
expr 
mark_location(expr_unmarked) 
expr_unmarked 
(?)

** In state 19, looking ahead at OR, reducing production
** expr_unmarked -> expr TIMES expr
** is permitted because of the following sub-derivation:

expr OR expr // lookahead token appears
mark_location(expr_unmarked) // lookahead token is inherited
expr_unmarked // lookahead token is inherited
expr TIMES expr . 

** In state 19, looking ahead at OR, shifting is permitted
** because of the following sub-derivation:

expr TIMES expr 
           mark_location(expr_unmarked) 
           expr_unmarked 
           expr . OR expr 
